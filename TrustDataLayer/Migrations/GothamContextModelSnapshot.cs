// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TrustDataLayer;

namespace TrustDataLayer.Migrations
{
    [DbContext(typeof(GothamContext))]
    partial class GothamContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("TrustDataLayer.Models.Admins", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("TrustDataLayer.Models.Foods", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OutletAssign")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OutletName1")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("OutletName1");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("TrustDataLayer.Models.Outlets", b =>
                {
                    b.Property<string>("OutletName")
                        .HasColumnType("text");

                    b.Property<string>("Landmark")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PacketsCount")
                        .HasColumnType("integer");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("VolunteerAvailable")
                        .HasColumnType("integer");

                    b.HasKey("OutletName");

                    b.ToTable("Outlets");
                });

            modelBuilder.Entity("TrustDataLayer.Models.Volunteers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OutletChoice")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OutletName1")
                        .HasColumnType("text");

                    b.Property<long>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("OutletName1");

                    b.ToTable("Volunteers");
                });

            modelBuilder.Entity("TrustDataLayer.Models.Foods", b =>
                {
                    b.HasOne("TrustDataLayer.Models.Outlets", "OutletName")
                        .WithMany()
                        .HasForeignKey("OutletName1");

                    b.Navigation("OutletName");
                });

            modelBuilder.Entity("TrustDataLayer.Models.Volunteers", b =>
                {
                    b.HasOne("TrustDataLayer.Models.Outlets", "OutletName")
                        .WithMany()
                        .HasForeignKey("OutletName1");

                    b.Navigation("OutletName");
                });
#pragma warning restore 612, 618
        }
    }
}
